openapi: 3.0.3
info:
  title: 'Real state'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ndpctjtsmzbzbatnxm
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: ofelia.shields@example.org
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: "12b/h8&T')"
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: luna.ebert@example.com
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: 'n:Z=HkAF[WMyX?T'
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/tasks:
    get:
      summary: ''
      operationId: getApiTasks
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-03-23T17:19:15'
                date_to:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>date_from</code>.'
                  example: '2080-08-01'
                user_id:
                  type: integer
                  description: ''
                  example: 12
                status_id:
                  type: string
                  description: ''
                  example: '2'
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                building_id:
                  type: integer
                  description: ''
                  example: 3
              required:
                - date_from
                - date_to
                - user_id
                - status_id
                - building_id
      security: []
    post:
      summary: ''
      operationId: postApiTasks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: yfiuvvtti
                address:
                  type: string
                  description: ''
                  example: blanditiis
                description:
                  type: string
                  description: ''
                  example: 'Culpa odio explicabo consectetur est a labore aspernatur.'
                status_id:
                  type: string
                  description: ''
                  example: '4'
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                user_id:
                  type: string
                  description: ''
                  example: impedit
                building_id:
                  type: string
                  description: ''
                  example: excepturi
              required:
                - title
                - address
                - description
                - status_id
                - user_id
                - building_id
      security: []
  '/api/comments/{task_id}':
    post:
      summary: ''
      operationId: postApiCommentsTask_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: ''
                  example: est
              required:
                - content
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
